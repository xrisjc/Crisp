writeLn('Welcome to Crisp')

fn printList(l)
begin
    let i := 0
    while i < len(l) do
    begin
        writeLn('[', i, '] = ', l[i])
        i := i + 1
    end
end

let Test := record
    nTests
    nErrors
    showPassedTest
end

fn Test.assert(t, condition, message)
  begin
    t.nTests := t.nTests + 1
    if condition = false then
      begin
        writeLn('[FAILED] "', message, '"')
        t.nErrors := t.nErrors + 1
      end
    else if t.showPassedTest then
        writeLn('[OK] "', message, '"')
  end

fn Test.assertEq(t, test, expected, message)
  begin
    t.nTests := t.nTests + 1
    if test <> expected then
      begin
        writeLn('[FAILED] "', message, '": expected <', expected, '> got <',
            test, '>')
        t.nErrors := t.nErrors + 1
      end
    else if t.showPassedTest then
        writeLn('[OK] "', message, '"')
  end

fn Test.displaySummary(t)
  begin
    writeLn()
    writeLn(t.nTests - t.nErrors, ' out of ', t.nTests, ' tests passed.')
    writeLn('There are ', t.nErrors, ' errors. ',
        if t.nErrors=0 then ':-)' else 'D-:')
  end
