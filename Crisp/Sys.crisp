let Test := record
    nTests
    nErrors
    showPassedTest

    fn pass(message)
      begin
        this.nTests := this.nTests + 1
        writeLn('[OK] "', message, '"')
      end

    fn fail(message)
      begin
        this.nTests := this.nTests + 1
        this.nErrors := this.nErrors + 1
        writeLn('[FAILED] "', message, '"')
      end

    fn assert(condition, message)
      begin
        if not condition then
            this.fail(message)
        else if this.showPassedTest then
            this.pass(message)
      end

    fn assertEq(test, expected, message)
      begin
        this.nTests := this.nTests + 1
        if test <> expected then
          begin
            writeLn('[FAILED] "', message, '": expected <', expected, '> got <',
                test, '>')
            this.nErrors := this.nErrors + 1
          end
        else if this.showPassedTest then
            writeLn('[OK] "', message, '"')
      end

    fn displaySummary()
      begin
        writeLn()
        writeLn(this.nTests - this.nErrors, ' out of ', this.nTests, ' tests passed.')
        writeLn('There are ', this.nErrors, ' errors. ',
            if this.nErrors=0 then ':-)' else 'D-:')
      end
end
